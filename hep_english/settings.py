"""
Django settings for hep_english project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import dj_database_url
import environ
from pathlib import Path
import os
import dotenv
from dotenv import load_dotenv

# Add .env variables anywhere before SECRET_KEY

# env = environ.Env()
# environ.Env.read_env(os.path.join( '.env'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/



# SECURITY WARNING: keep the secret key used in production secret!

dotenv_file = os.path.join(BASE_DIR , '.env')
load_dotenv()
if os.path.isfile(dotenv_file):
    dotenv.load_dotenv(dotenv_file)


# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY= os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

            # en mode python-dotenv
# DEBUG = os.getenv("DEBUG",False).lower() == "true"
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")

            # en mode environ 
# DEBUG  = env('DEBUG',False).lower() =='true'
#
# ALLOWED_HOSTS = env('ALLOWED_HOSTS').split(" ")
# 

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'home.apps.HomeConfig',
    'users.apps.UsersConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     "crispy_forms",
     "crispy_bootstrap4",
     "storages"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hep_english.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hep_english.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}



DATABASES = {

   'default': dj_database_url.parse('postgres://hep_english_user:lLaGEan4lHfJrkZiSn8g0WKFuQy579Rr@dpg-cm4sjma1hbls73afu150-a/hep_english')

}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# DEFAULT_FILE_STORAGE = "storages.backends.s3.S3Storage"

# STATICFILES_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

STATICFILES_DIRS =[os.path.join(BASE_DIR, 'home/static')]

                 # en mode python-dotenv
# AWS_ACCESS_KEY_ID=os.getenv("AWS_ACCESS_KEY_ID")
# AWS_SECRET_ACCESS_KEY=os.getenv("AWS_SECRET_ACCESS_KEY")
# AWS_STORAGE_BUCKET_NAME=os.getenv("AWS_STORAGE_BUCKET_NAME")
# AWS_S3_REGION_NAME=os.getenv("AWS_S3_REGION_NAME")
# AWS_S3_SIGNATURE_NAME=os.getenv("AWS_S3_SIGNATURE_NAME")
# AWS_S3_VERIFY=os.getenv("AWS_S3_VERIFY")
# AWS_S3_FILE_OVERWRITE=os.getenv("AWS_S3_FILE_OVERWRITE")
# AWS_DEFAULT_ACL=os.getenv("AWS_DEFAULT_ACL")

# DEFAULT_FILE_STORAGE =os.getenv("DEFAULT_FILE_STORAGE")

                # en move environ 
# AWS_ACCESS_KEY_ID=env('AWS_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY=env('AWS_SECRET_ACCESS_KEY')
# AWS_STORAGE_BUCKET_NAME=env('AWS_STORAGE_BUCKET_NAME')
# AWS_S3_REGION_NAME=env('AWS_S3_REGION_NAME')
# AWS_S3_SIGNATURE_NAME=env('AWS_S3_SIGNATURE_NAME')
# AWS_S3_VERIFY=env('AWS_S3_VERIFY')
# AWS_S3_FILE_OVERWRITE=env('AWS_S3_FILE_OVERWRITE')
# AWS_DEFAULT_ACL=env('AWS_DEFAULT_ACL')

# DEFAULT_FILE_STORAGE =env('DEFAULT_FILE_STORAGE')

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

LOGIN_REDIRECT_URL = ''
LOGIN_URL = 'login'

             # en mode python-dotenv
EMAIL_BACKEND =os.getenv("EMAIL_BACKEND")
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = os.getenv("EMAIL_PORT")
EMAIL_USE_TLS = os.getenv("EMAIL_USE_TLS")
EMAIL_FROM = os.getenv("EMAIL_FROM")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")


            # en mode environ
# EMAIL_BACKEND =env('EMAIL_BACKEND')
# EMAIL_HOST = env('EMAIL_HOST')
# EMAIL_PORT = env('EMAIL_PORT')
# EMAIL_USE_TLS = env('EMAIL_USE_TLS')
# EMAIL_FROM = env('EMAIL_FROM')
# EMAIL_HOST_USER = env('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')




# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
